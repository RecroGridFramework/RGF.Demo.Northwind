// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using RGF.Demo.Northwind.Area.RGF.DbModel;

#nullable disable

namespace RGF.Demo.Northwind.Data.Migrations.Oracle
{
    [DbContext(typeof(BaseDbContextMigrOracle))]
    [Migration("20230919000000_RGF.Demo.Northwind_v1")]
    partial class RGFNorthwind_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Recrovit.RecroGridFramework.Data.vRecroSec", b =>
                {
                    b.Property<int>("ObjectPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("OBJECTPERMISSIONID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectPermissionId"), 1L, 1);

                    b.Property<string>("ObjectKey")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("OBJECTKEY");

                    b.Property<string>("ObjectName")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("OBJECTNAME");

                    b.HasKey("ObjectPermissionId")
                        .HasName("PK_VRECROSEC");

                    b.ToTable("VRECROSEC", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("Recrovit.RecroGridFramework.Data.vRecroSec_FEP", b =>
                {
                    b.Property<int>("FEPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FEPID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FEPId"), 1L, 1);

                    b.Property<int>("EntityId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ENTITYID");

                    b.Property<int>("FEPType")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("FEPTYPE");

                    b.Property<string>("Key1")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("KEY1");

                    b.Property<int>("TransactionId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TRANSACTIONID");

                    b.HasKey("FEPId")
                        .HasName("PK_VRECROSEC_FEP");

                    b.ToTable("VRECROSEC_FEP", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CATEGORYID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("CATEGORYNAME");

                    b.Property<string>("Description")
                        .HasColumnType("NCLOB")
                        .HasColumnName("DESCRIPTION");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("BLOB")
                        .HasColumnName("PICTURE");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("CategoryID")
                        .HasName("PK_CATEGORIES");

                    b.HasIndex("CategoryName")
                        .HasDatabaseName("IX_CATEGORIES_CATEGORYNAME");

                    b.ToTable("CATEGORIES");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.CustomerCustomerDemo", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnType("NCHAR(5)")
                        .HasColumnName("CUSTOMERID");

                    b.Property<string>("CustomerTypeID")
                        .HasColumnType("NCHAR(10)")
                        .HasColumnName("CUSTOMERTYPEID");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("CustomerID", "CustomerTypeID")
                        .HasName("PK_CUSTOMERCUSTOMERDEMO");

                    b.HasIndex("CustomerTypeID")
                        .HasDatabaseName("IX_CUSTOMERCUSTOMERDEMO_CUSTOMERTYPEID");

                    b.ToTable("CUSTOMERCUSTOMERDEMO");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.CustomerDemographics", b =>
                {
                    b.Property<string>("CustomerTypeID")
                        .HasColumnType("NCHAR(10)")
                        .HasColumnName("CUSTOMERTYPEID");

                    b.Property<string>("CustomerDesc")
                        .HasColumnType("NCLOB")
                        .HasColumnName("CUSTOMERDESC");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("CustomerTypeID")
                        .HasName("PK_CUSTOMERDEMOGRAPHICS");

                    b.ToTable("CUSTOMERDEMOGRAPHICS");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Customers", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnType("NCHAR(5)")
                        .HasColumnName("CUSTOMERID");

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("CITY");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("COMPANYNAME");

                    b.Property<string>("ContactName")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("CONTACTNAME");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("CONTACTTITLE");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("COUNTRY");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .HasColumnType("NVARCHAR2(24)")
                        .HasColumnName("FAX");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("NVARCHAR2(24)")
                        .HasColumnName("PHONE");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("POSTALCODE");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("REGION");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("CustomerID")
                        .HasName("PK_CUSTOMERS");

                    b.HasIndex("City")
                        .HasDatabaseName("IX_CUSTOMERS_CITY");

                    b.HasIndex("CompanyName")
                        .HasDatabaseName("IX_CUSTOMERS_COMPANYNAME");

                    b.HasIndex("PostalCode")
                        .HasDatabaseName("IX_CUSTOMERS_POSTALCODE");

                    b.HasIndex("Region")
                        .HasDatabaseName("IX_CUSTOMERS_REGION");

                    b.ToTable("CUSTOMERS");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Employees", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EMPLOYEEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("BIRTHDATE");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("CITY");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("COUNTRY");

                    b.Property<string>("Extension")
                        .HasMaxLength(4)
                        .HasColumnType("NVARCHAR2(4)")
                        .HasColumnName("EXTENSION");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("HIREDATE");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(24)
                        .HasColumnType("NVARCHAR2(24)")
                        .HasColumnName("HOMEPHONE");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("Notes")
                        .HasColumnType("NCLOB")
                        .HasColumnName("NOTES");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("BLOB")
                        .HasColumnName("PHOTO");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("PHOTOPATH");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("POSTALCODE");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("REGION");

                    b.Property<int?>("ReportsTo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REPORTSTO");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("TITLE");

                    b.Property<string>("TitleOfCourtesy")
                        .HasMaxLength(25)
                        .HasColumnType("NVARCHAR2(25)")
                        .HasColumnName("TITLEOFCOURTESY");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("EmployeeID")
                        .HasName("PK_EMPLOYEES");

                    b.HasIndex("LastName")
                        .HasDatabaseName("IX_EMPLOYEES_LASTNAME");

                    b.HasIndex("PostalCode")
                        .HasDatabaseName("IX_EMPLOYEES_POSTALCODE");

                    b.HasIndex("ReportsTo")
                        .HasDatabaseName("IX_EMPLOYEES_REPORTSTO");

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.EmployeeTerritories", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EMPLOYEEID");

                    b.Property<string>("TerritoryID")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TERRITORYID");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("EmployeeID", "TerritoryID")
                        .HasName("PK_EMPLOYEETERRITORIES");

                    b.HasIndex("TerritoryID")
                        .HasDatabaseName("IX_EMPLOYEETERRITORIES_TERRITORYID");

                    b.ToTable("EMPLOYEETERRITORIES", (string)null);
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Order_Details", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDERID");

                    b.Property<int>("ProductID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    b.Property<float>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("DISCOUNT")
                        .HasDefaultValueSql("(0)");

                    b.Property<short>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(5)")
                        .HasDefaultValue((short)1)
                        .HasColumnName("QUANTITY");

                    b.Property<decimal>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("UNITPRICE")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("OrderId", "ProductID")
                        .HasName("PK_ORDERDETAILS");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("IX_ORDERDETAILS_ORDERID");

                    b.HasIndex("ProductID")
                        .HasDatabaseName("IX_ORDERDETAILS_PRODUCTID");

                    b.ToTable("ORDERDETAILS", (string)null);
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"), 1L, 1);

                    b.Property<string>("CustomerID")
                        .HasColumnType("NCHAR(5)")
                        .HasColumnName("CUSTOMERID");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EMPLOYEEID");

                    b.Property<decimal?>("Freight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("FREIGHT")
                        .HasDefaultValueSql("(0)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("ORDERDATE");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("REQUIREDDATE");

                    b.Property<string>("ShipAddress")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("SHIPADDRESS");

                    b.Property<string>("ShipCity")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("SHIPCITY");

                    b.Property<string>("ShipCountry")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("SHIPCOUNTRY");

                    b.Property<string>("ShipName")
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("SHIPNAME");

                    b.Property<string>("ShipPostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("SHIPPOSTALCODE");

                    b.Property<string>("ShipRegion")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("SHIPREGION");

                    b.Property<int?>("ShipVia")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SHIPVIA");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("SHIPPEDDATE");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("OrderID")
                        .HasName("PK_ORDERS");

                    b.HasIndex("CustomerID")
                        .HasDatabaseName("IX_ORDERS_CUSTOMERID");

                    b.HasIndex("EmployeeID")
                        .HasDatabaseName("IX_ORDERS_EMPLOYEEID");

                    b.HasIndex("OrderDate")
                        .HasDatabaseName("IX_ORDERS_ORDERDATE");

                    b.HasIndex("ShipPostalCode")
                        .HasDatabaseName("IX_ORDERS_SHIPPOSTALCODE");

                    b.HasIndex("ShipVia")
                        .HasDatabaseName("IX_ORDERS_SHIPVIA");

                    b.HasIndex("ShippedDate")
                        .HasDatabaseName("IX_ORDERS_SHIPPEDDATE");

                    b.ToTable("ORDERS");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Products", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRODUCTID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CATEGORYID");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("DISCONTINUED");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("PRODUCTNAME");

                    b.Property<string>("QuantityPerUnit")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("QUANTITYPERUNIT");

                    b.Property<short?>("ReorderLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("REORDERLEVEL")
                        .HasDefaultValueSql("(0)");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SUPPLIERID");

                    b.Property<decimal?>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("UNITPRICE")
                        .HasDefaultValueSql("(0)");

                    b.Property<short?>("UnitsInStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("UNITSINSTOCK")
                        .HasDefaultValueSql("(0)");

                    b.Property<short?>("UnitsOnOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("UNITSONORDER")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("ProductID")
                        .HasName("PK_PRODUCTS");

                    b.HasIndex("CategoryID")
                        .HasDatabaseName("IX_PRODUCTS_CATEGORYID");

                    b.HasIndex("ProductName")
                        .HasDatabaseName("IX_PRODUCTS_PRODUCTNAME");

                    b.HasIndex("SupplierID")
                        .HasDatabaseName("IX_PRODUCTS_SUPPLIERID");

                    b.ToTable("PRODUCTS");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Region", b =>
                {
                    b.Property<int>("RegionID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REGIONID");

                    b.Property<string>("RegionDescription")
                        .IsRequired()
                        .HasColumnType("NCHAR(50)")
                        .HasColumnName("REGIONDESCRIPTION");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("RegionID")
                        .HasName("PK_REGION");

                    b.ToTable("REGION");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Shippers", b =>
                {
                    b.Property<int>("ShipperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SHIPPERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipperID"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("COMPANYNAME");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("NVARCHAR2(24)")
                        .HasColumnName("PHONE");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("ShipperID")
                        .HasName("PK_SHIPPERS");

                    b.ToTable("SHIPPERS");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Suppliers", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SUPPLIERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("CITY");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("COMPANYNAME");

                    b.Property<string>("ContactName")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("CONTACTNAME");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("CONTACTTITLE");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("COUNTRY");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .HasColumnType("NVARCHAR2(24)")
                        .HasColumnName("FAX");

                    b.Property<string>("HomePage")
                        .HasColumnType("NCLOB")
                        .HasColumnName("HOMEPAGE");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .HasColumnType("NVARCHAR2(24)")
                        .HasColumnName("PHONE");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("POSTALCODE");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR2(15)")
                        .HasColumnName("REGION");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("SupplierID")
                        .HasName("PK_SUPPLIERS");

                    b.HasIndex("CompanyName")
                        .HasDatabaseName("IX_SUPPLIERS_COMPANYNAME");

                    b.HasIndex("PostalCode")
                        .HasDatabaseName("IX_SUPPLIERS_POSTALCODE");

                    b.ToTable("SUPPLIERS");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Territories", b =>
                {
                    b.Property<string>("TerritoryID")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TERRITORYID");

                    b.Property<int>("RegionID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REGIONID");

                    b.Property<string>("TerritoryDescription")
                        .IsRequired()
                        .HasColumnType("NCHAR(50)")
                        .HasColumnName("TERRITORYDESCRIPTION");

                    b.Property<int>("rowversion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROWVERSION")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("TerritoryID")
                        .HasName("PK_TERRITORIES");

                    b.HasIndex("RegionID")
                        .HasDatabaseName("IX_TERRITORIES_REGIONID");

                    b.ToTable("TERRITORIES");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.CustomerCustomerDemo", b =>
                {
                    b.HasOne("RGF.Demo.Northwind.Models.Customers", "Customer")
                        .WithMany("CustomerCustomerDemo")
                        .HasForeignKey("CustomerID")
                        .IsRequired()
                        .HasConstraintName("FK_CUSTOMERCUSTOMERDEMO_CUST");

                    b.HasOne("RGF.Demo.Northwind.Models.CustomerDemographics", "CustomerType")
                        .WithMany("CustomerCustomerDemo")
                        .HasForeignKey("CustomerTypeID")
                        .IsRequired()
                        .HasConstraintName("FK_CUSTOMERCUSTOMERDEMO");

                    b.Navigation("Customer");

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Employees", b =>
                {
                    b.HasOne("RGF.Demo.Northwind.Models.Employees", "Employees2")
                        .WithMany("Employees1")
                        .HasForeignKey("ReportsTo")
                        .HasConstraintName("FK_EMPLOYEES_EMPLOYEES");

                    b.Navigation("Employees2");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.EmployeeTerritories", b =>
                {
                    b.HasOne("RGF.Demo.Northwind.Models.Employees", "Employees")
                        .WithMany("EmployeeTerritories")
                        .HasForeignKey("EmployeeID")
                        .IsRequired()
                        .HasConstraintName("FK_EMPLOYEETERRITORIES_EMP");

                    b.HasOne("RGF.Demo.Northwind.Models.Territories", "Territories")
                        .WithMany("EmployeeTerritories")
                        .HasForeignKey("TerritoryID")
                        .IsRequired()
                        .HasConstraintName("FK_EMPLOYEETERRITORIES_TERR");

                    b.Navigation("Employees");

                    b.Navigation("Territories");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Order_Details", b =>
                {
                    b.HasOne("RGF.Demo.Northwind.Models.Orders", "Orders")
                        .WithMany("Order_Details")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_ORDER_DETAILS_ORDERS");

                    b.HasOne("RGF.Demo.Northwind.Models.Products", "Products")
                        .WithMany("Order_Details")
                        .HasForeignKey("ProductID")
                        .IsRequired()
                        .HasConstraintName("FK_ORDER_DETAILS_PRODUCTS");

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Orders", b =>
                {
                    b.HasOne("RGF.Demo.Northwind.Models.Customers", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .HasConstraintName("FK_ORDERS_CUSTOMERS");

                    b.HasOne("RGF.Demo.Northwind.Models.Employees", "Employees")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeID")
                        .HasConstraintName("FK_ORDERS_EMPLOYEES");

                    b.HasOne("RGF.Demo.Northwind.Models.Shippers", "Shippers")
                        .WithMany("Orders")
                        .HasForeignKey("ShipVia")
                        .HasConstraintName("FK_ORDERS_SHIPPERS");

                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("Shippers");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Products", b =>
                {
                    b.HasOne("RGF.Demo.Northwind.Models.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK_PRODUCTS_CATEGORIES");

                    b.HasOne("RGF.Demo.Northwind.Models.Suppliers", "Suppliers")
                        .WithMany("Products")
                        .HasForeignKey("SupplierID")
                        .HasConstraintName("FK_PRODUCTS_SUPPLIERS");

                    b.Navigation("Categories");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Territories", b =>
                {
                    b.HasOne("RGF.Demo.Northwind.Models.Region", "Region")
                        .WithMany("Territories")
                        .HasForeignKey("RegionID")
                        .IsRequired()
                        .HasConstraintName("FK_TERRITORIES_REGION");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.CustomerDemographics", b =>
                {
                    b.Navigation("CustomerCustomerDemo");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Customers", b =>
                {
                    b.Navigation("CustomerCustomerDemo");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Employees", b =>
                {
                    b.Navigation("EmployeeTerritories");

                    b.Navigation("Employees1");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Orders", b =>
                {
                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Products", b =>
                {
                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Region", b =>
                {
                    b.Navigation("Territories");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Shippers", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Suppliers", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("RGF.Demo.Northwind.Models.Territories", b =>
                {
                    b.Navigation("EmployeeTerritories");
                });
#pragma warning restore 612, 618
        }
    }
}
